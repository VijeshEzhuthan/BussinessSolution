<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:Common.WindowStyle.ExtendedButton"
                    x:Class="Common.WindowStyle.WindowCustomBorderStyle">
    
    <ResourceDictionary.MergedDictionaries>
    </ResourceDictionary.MergedDictionaries>

    <!-- Constantes -->
    <CornerRadius x:Key="WindowCorderRadius">0,0,0,0</CornerRadius>
    <CornerRadius x:Key="TitleCorderRadius">0,0,0,0</CornerRadius>

    <!-- Base title button style -->
    <Style x:Key="TitleBarRadialButton" TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="MinHeight" Value="13" />
        <Setter Property="MinWidth" Value="13" />
        <Setter Property="Opacity" Value="0.9" />
    </Style>

    <!-- Close Button -->
    <Style x:Key="CloseRadialButton" TargetType="Button" BasedOn="{StaticResource TitleBarRadialButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="ButtonRoot">
                        <Grid.Effect>
                            <DropShadowEffect ShadowDepth="0" Color="Red" BlurRadius="0"/>
                        </Grid.Effect>

                        <Image x:Name="Image" Source="Images\normal close.png" 
                               HorizontalAlignment="Center" VerticalAlignment="Center" Width="13" Height="13">
                        </Image>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Image" Property="Source" Value="Images\highlighted close.png" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                        </Trigger>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ButtonRoot" 
                                                     Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" 
                                                     To="15" Duration="0:0:0.3" />

                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                     To="1" Duration="0:0:0.5" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ButtonRoot" 
                                                     Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)" 
                                                     To="0" Duration="0:0:0.2" />

                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                     To="0.9" Duration="0:0:0.5" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Minimize Button -->
    <Style x:Key="MinimizeRadialButton" TargetType="Button" BasedOn="{StaticResource TitleBarRadialButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Image x:Name="Image" Source="Images\normal minimize.bmp" 
                               HorizontalAlignment="Center" VerticalAlignment="Center" Width="13" Height="13"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Image" Property="Source" Value="Images\highlighted minimize.bmp" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Maximize Button -->
    <Style x:Key="MaximizeRadialButton" TargetType="Button" BasedOn="{StaticResource TitleBarRadialButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Image x:Name="Image" Source="Images\normal maximize.bmp" 
                               HorizontalAlignment="Center" VerticalAlignment="Center" Width="13" Height="13"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Image" Property="Source" Value="Images\highlighted maximize.bmp" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Border defining the frame of the Window -->
    <Style x:Key="WindowBorder" TargetType="Border">
        <Setter Property="CornerRadius" Value="{StaticResource WindowCorderRadius}" />
        <Setter Property="Background" Value="#ABABAB" />
        <Setter Property="BorderBrush" Value="DimGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WindowState}" Value="Maximized">
                <Setter Property="CornerRadius" Value="0"/>
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="TitleBarBackgroundBorder" TargetType="Border">
        <Setter Property="Height" Value="30" />
        <Setter Property="CornerRadius" Value="{StaticResource TitleCorderRadius}" />
        <Setter Property="Background" Value="{DynamicResource TitleBarBackgroundBrush}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WindowState}" Value="Maximized">
                <Setter Property="CornerRadius" Value="0"/>
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="WindowRoot" TargetType="Grid">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WindowState}" Value="Maximized" >
                <Setter Property="Margin" Value="{DynamicResource WindowRootMargin}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ErrorMessageTemplate" TargetType="{x:Type TextBox}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="False">
                        <AdornedElementPlaceholder x:Name="Box" DockPanel.Dock="Top" />
                        <TextBlock Foreground="Red" DockPanel.Dock="Bottom" Text="{ Binding ElementName=Box,Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" ></TextBlock>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RectBorderStyle" TargetType="Rectangle">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Fill" Value="Transparent" />
    </Style>

    <Style x:Key="WaterMarkStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border Background="White" BorderBrush="#FF7D8683" BorderThickness="1"/>
                        <ScrollViewer x:Name="PART_ContentHost" Margin="5,0,0,0" VerticalAlignment="Center" />
                        <Label Margin="5,0,0,0" x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" VerticalAlignment="Center"
                               Visibility="Collapsed" Foreground="Gray" FontFamily="Arial"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="DimGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="SearchToggleButton" TargetType="ToggleButton" >
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
              x:Name="Border" 
              Grid.ColumnSpan="2"
              CornerRadius="2"
              Background="White"
              BorderBrush="{StaticResource NormalBorderBrush}"
              BorderThickness="1" />
            <!--<Border 
              Grid.Column="0"
              CornerRadius="2,0,0,2" 
              Margin="1" 
              Background="{StaticResource WindowBackgroundBrush}" 
              BorderBrush="{StaticResource NormalBorderBrush}"
              BorderThickness="0,0,1,0" />-->
            <!--<Path 
              x:Name="Arrow"
              Grid.Column="1"     
              Fill="{StaticResource GlyphBrush}"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"/>
            <Image x:Name="ImageLook" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Width="15" Height="15" Focusable="False" >
                <Image.Source>
                    <ImageSource>../Images/LookupGlass.png</ImageSource>
                </Image.Source>
            </Image>-->
        </Grid>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
            </Trigger>-->
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                <!--<Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />-->
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="AutoCompleteComboBox" TargetType="ComboBox" BasedOn="{StaticResource ComboBoxEx}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource SearchToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
                            Name="ContentSite"
                            IsHitTestVisible="False" 
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <!--<TextBox x:Name="PART_EditableTextBox" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            BorderThickness="0"
                            Background="{TemplateBinding Background}"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Width="{TemplateBinding Width}"/>-->
                        <TextBox x:Name="PART_EditableTextBox" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            BorderThickness="0"
                            Background="White"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Width="{TemplateBinding Width}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid 
                              Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="White"
                                BorderThickness="1"
                                BorderBrush="{StaticResource SolidBorderBrush}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>-->
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Window Template -->
    <ControlTemplate x:Key="WindowTemplate" TargetType="{x:Type Window}" >
        <ControlTemplate.Resources>
            <GridLength x:Key="BorderWidth">7</GridLength>
        </ControlTemplate.Resources>

        <Grid x:Name="WindowRoot" Style="{DynamicResource WindowRoot}" SizeChanged="OnWindowSizeChanged"  Loaded="OnWindowLoaded">
            <Border x:Name="WindowFrame" Style="{DynamicResource WindowBorder}">
                <Grid x:Name="WindowLayout">

                    <!-- The title bar. -->
                    <Grid Margin="0" VerticalAlignment="Top">
                        <Border Style="{DynamicResource TitleBarBackgroundBorder}" 
                                MouseLeftButtonDown="MoveWindow" MouseMove="OnBorderMouseMove" />
                        <Image x:Name="IconApp" Margin="10, 0, 0, 0" HorizontalAlignment="Left" Source="{TemplateBinding Icon}"></Image>
                        <TextBlock Foreground="{DynamicResource TextBrush}" Text="{TemplateBinding Title}" 
                                   HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Normal" 
                                   MouseLeftButtonDown="MoveWindow"/>

                        <!-- Window state buttons -->
                        <StackPanel Margin="0,8" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">

                            <Button Style="{StaticResource MinimizeRadialButton}" Click="MinimizeWindow" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0"/>
                            <Button Style="{StaticResource MaximizeRadialButton}" Click="MaximizeWindow" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0" />
                            <Button Style="{StaticResource CloseRadialButton}" Click="CloseWindow" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0" />
                        </StackPanel>
                    </Grid>

                    <!-- The window content. -->
                    <Border x:Name="WindowContent" Margin="0,30,0,0">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>

                    <!-- Grips -->
                    <!-- Sides -->
                    <Rectangle x:Name="leftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" HorizontalAlignment="Left"/>
                    <Rectangle x:Name="rightSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" HorizontalAlignment="Right"/>
                    <Rectangle x:Name="topSizeGrip" Style="{StaticResource RectBorderStyle}" Height="7" VerticalAlignment="Top"/>
                    <Rectangle x:Name="bottomSizeGrip" Style="{StaticResource RectBorderStyle}" Height="7" VerticalAlignment="Bottom"/>
                    <!--Corners -->
                    <Rectangle Name="topLeftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" Height="7" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <Rectangle Name="bottomRightSizeGrip" Style="{StaticResource RectBorderStyle}"  Width="7" Height="7" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                    <Rectangle Name="topRightSizeGrip" Style="{StaticResource RectBorderStyle}"  Width="7" Height="7" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                    <Rectangle Name="bottomLeftSizeGrip" Style="{StaticResource RectBorderStyle}"  Width="7" Height="7" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="LoginWindowTemplate" TargetType="{x:Type Window}" >
        <ControlTemplate.Resources>
            <GridLength x:Key="BorderWidth">7</GridLength>
        </ControlTemplate.Resources>

        <Grid x:Name="WindowRoot" Style="{DynamicResource WindowRoot}" SizeChanged="OnWindowSizeChanged"  Loaded="OnWindowLoaded">
            <Border x:Name="WindowFrame" Style="{DynamicResource WindowBorder}">
                <Grid x:Name="WindowLayout">

                    <!-- The title bar. -->
                    <Grid Margin="0" VerticalAlignment="Top">
                        <Border Style="{DynamicResource TitleBarBackgroundBorder}" 
                                MouseLeftButtonDown="MoveWindow" MouseMove="OnBorderMouseMove" />
                        <StackPanel Margin="0,8" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">

                            <Button Style="{StaticResource MinimizeRadialButton}" Click="MinimizeWindow" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0"/>
                            <Button Style="{StaticResource CloseRadialButton}" Click="CloseWindow" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0" />
                        </StackPanel>
                    </Grid>

                    <!-- The window content. -->
                    <Border x:Name="WindowContent" Margin="0,30,0,0">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>

                    <!-- Grips -->
                    <!-- Sides -->
                    <Rectangle x:Name="leftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" HorizontalAlignment="Left"/>
                    <Rectangle x:Name="rightSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" HorizontalAlignment="Right"/>
                    <Rectangle x:Name="topSizeGrip" Style="{StaticResource RectBorderStyle}" Height="7" VerticalAlignment="Top"/>
                    <Rectangle x:Name="bottomSizeGrip" Style="{StaticResource RectBorderStyle}" Height="7" VerticalAlignment="Bottom"/>
                    <!--Corners -->
                    <Rectangle Name="topLeftSizeGrip" Style="{StaticResource RectBorderStyle}" Width="7" Height="7" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <Rectangle Name="bottomRightSizeGrip" Style="{StaticResource RectBorderStyle}"  Width="7" Height="7" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                    <Rectangle Name="topRightSizeGrip" Style="{StaticResource RectBorderStyle}"  Width="7" Height="7" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                    <Rectangle Name="bottomLeftSizeGrip" Style="{StaticResource RectBorderStyle}"  Width="7" Height="7" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>
    <!-- Window Style -->

    <!-- ISSUE WITH XP : http://connect.microsoft.com/VisualStudio/feedback/details/369500/problem-with-the-allowtransparency-and-popup-controls-in-wpf -->
    <!-- Hotfix : http://support.microsoft.com/kb/943326 -->
    <Style x:Key="SkinWindowStyle" TargetType="Window">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MinHeight" Value="150"/>
        <Setter Property="MinWidth" Value="250"/>
        <Setter Property="Opacity" Value="1.0" />
        <Setter Property="Template" Value="{StaticResource WindowTemplate}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState}" Value="Maximized">
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SkinLoginWindowStyle" TargetType="Window">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MinHeight" Value="150"/>
        <Setter Property="MinWidth" Value="250"/>
        <Setter Property="Opacity" Value="1.0" />
        <Setter Property="Template" Value="{StaticResource LoginWindowTemplate}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowState}" Value="Maximized">
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <local:VisibilityConvertor x:Key="VisibilityConvertor"></local:VisibilityConvertor>
    <Style TargetType="{x:Type local:ImageButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageButton}">
                    <Button >
                        <StackPanel Orientation="Horizontal">
                            <Image Margin="2 0"
                                   Source="{TemplateBinding Image}"
                                   Width="{TemplateBinding ImageWidth}"
                                   Height="{TemplateBinding ImageHeight}"
                                   Visibility="{TemplateBinding Image,Converter={StaticResource VisibilityConvertor}}"
                                   VerticalAlignment="Center"/>
                            <TextBlock Text="{TemplateBinding Content}"
                                       VerticalAlignment="Center"/>

                        </StackPanel>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LeftMenu"
         TargetType="HeaderedContentControl">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type HeaderedContentControl}}, Path=DataContext}">
                        <Button Command="{Binding AddCommand}"
                    Content="Add" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width"
            Value="160" />
    </Style>

</ResourceDictionary>