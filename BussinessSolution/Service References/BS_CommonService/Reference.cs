//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BussinessSolution.BS_CommonService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnitOfMeasureInfo", Namespace="http://schemas.datacontract.org/2004/07/BussinessSolutionServiceBLL")]
    [System.SerializableAttribute()]
    public partial class UnitOfMeasureInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnitIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitOfMeasureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnitID {
            get {
                return this.UnitIDField;
            }
            set {
                if ((this.UnitIDField.Equals(value) != true)) {
                    this.UnitIDField = value;
                    this.RaisePropertyChanged("UnitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitOfMeasure {
            get {
                return this.UnitOfMeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitOfMeasureField, value) != true)) {
                    this.UnitOfMeasureField = value;
                    this.RaisePropertyChanged("UnitOfMeasure");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VendorInfo", Namespace="http://schemas.datacontract.org/2004/07/BussinessSolutionServiceBLL")]
    [System.SerializableAttribute()]
    public partial class VendorInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyInfo", Namespace="http://schemas.datacontract.org/2004/07/BussinessSolutionServiceBLL")]
    [System.SerializableAttribute()]
    public partial class CompanyInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PincodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TinNumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone1 {
            get {
                return this.Phone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone1Field, value) != true)) {
                    this.Phone1Field = value;
                    this.RaisePropertyChanged("Phone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone2 {
            get {
                return this.Phone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone2Field, value) != true)) {
                    this.Phone2Field = value;
                    this.RaisePropertyChanged("Phone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pincode {
            get {
                return this.PincodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PincodeField, value) != true)) {
                    this.PincodeField = value;
                    this.RaisePropertyChanged("Pincode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TinNum {
            get {
                return this.TinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.TinNumField, value) != true)) {
                    this.TinNumField = value;
                    this.RaisePropertyChanged("TinNum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BS_CommonService.ICommonService")]
    public interface ICommonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetUnitOfMeasure", ReplyAction="http://tempuri.org/ICommonService/GetUnitOfMeasureResponse")]
        BussinessSolution.BS_CommonService.UnitOfMeasureInfo[] GetUnitOfMeasure();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetUnitOfMeasure", ReplyAction="http://tempuri.org/ICommonService/GetUnitOfMeasureResponse")]
        System.Threading.Tasks.Task<BussinessSolution.BS_CommonService.UnitOfMeasureInfo[]> GetUnitOfMeasureAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetVendorInfo", ReplyAction="http://tempuri.org/ICommonService/GetVendorInfoResponse")]
        BussinessSolution.BS_CommonService.VendorInfo[] GetVendorInfo(string vendorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetVendorInfo", ReplyAction="http://tempuri.org/ICommonService/GetVendorInfoResponse")]
        System.Threading.Tasks.Task<BussinessSolution.BS_CommonService.VendorInfo[]> GetVendorInfoAsync(string vendorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetCompanyInfo", ReplyAction="http://tempuri.org/ICommonService/GetCompanyInfoResponse")]
        BussinessSolution.BS_CommonService.CompanyInfo GetCompanyInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetCompanyInfo", ReplyAction="http://tempuri.org/ICommonService/GetCompanyInfoResponse")]
        System.Threading.Tasks.Task<BussinessSolution.BS_CommonService.CompanyInfo> GetCompanyInfoAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommonServiceChannel : BussinessSolution.BS_CommonService.ICommonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommonServiceClient : System.ServiceModel.ClientBase<BussinessSolution.BS_CommonService.ICommonService>, BussinessSolution.BS_CommonService.ICommonService {
        
        public CommonServiceClient() {
        }
        
        public CommonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BussinessSolution.BS_CommonService.UnitOfMeasureInfo[] GetUnitOfMeasure() {
            return base.Channel.GetUnitOfMeasure();
        }
        
        public System.Threading.Tasks.Task<BussinessSolution.BS_CommonService.UnitOfMeasureInfo[]> GetUnitOfMeasureAsync() {
            return base.Channel.GetUnitOfMeasureAsync();
        }
        
        public BussinessSolution.BS_CommonService.VendorInfo[] GetVendorInfo(string vendorName) {
            return base.Channel.GetVendorInfo(vendorName);
        }
        
        public System.Threading.Tasks.Task<BussinessSolution.BS_CommonService.VendorInfo[]> GetVendorInfoAsync(string vendorName) {
            return base.Channel.GetVendorInfoAsync(vendorName);
        }
        
        public BussinessSolution.BS_CommonService.CompanyInfo GetCompanyInfo() {
            return base.Channel.GetCompanyInfo();
        }
        
        public System.Threading.Tasks.Task<BussinessSolution.BS_CommonService.CompanyInfo> GetCompanyInfoAsync() {
            return base.Channel.GetCompanyInfoAsync();
        }
    }
}
